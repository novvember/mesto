(()=>{"use strict";var e=".popup__form",t=document.querySelector(".profile__name"),n=document.querySelector(".profile__job"),r=document.querySelector(".profile__avatar"),o=document.querySelector(".profile__button_type_edit"),i=".popup_type_edit-profile",a=document.querySelector(i),u=a.querySelector(".popup__input_type_name"),c=a.querySelector(".popup__input_type_job"),l=document.querySelector(".profile__button_type_add"),s=".popup_type_add-card",f=document.querySelector(s).querySelector(e),p={baseUrl:"https://mesto.nomoreparties.co/v1/".concat("cohort-41"),headers:{authorization:"b5024e97-68ca-4480-bf36-543078de24a2","Content-Type":"application/json"}};function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var _=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,n=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){var n=e._renderer(t);e.addItem(n)}))}},{key:"addItem",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];t?this._container.prepend(e):this._container.append(e)}}],n&&h(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var d=function(){function e(t,n,r,o,i){var a=t.name,u=t.link,c=t.likes,l=t.owner,s=t.createdAt,f=t._id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=a,this._link=u,this._likes=c,this._owner=l,this._createdAt=s,this._id=f,this._userId=i,this._templateSelector=n,this._handleCardClick=r,this._handleDeleteCard=o}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"generateCard",value:function(){this._element=this._getTemplate();var e=this._element.querySelector(".card__image");return e.src=this._link,e.alt=this._name,this._element.querySelector(".card__title").textContent=this._name,this._element.querySelector(".card__like-count").textContent=this._likes.length,this._owner._id!==this._userId&&this._element.querySelector(".card__delete-button").remove(),this._setEventlisteners(),this._element}},{key:"_setEventlisteners",value:function(){var e=this;this._element.querySelector(".card__like-button").addEventListener("click",this._likeCard),this._element.querySelector(".card__image").addEventListener("click",(function(){return e._handleCardClick(e._link,e._name)})),this._element.querySelector(".card__delete-button")&&this._element.querySelector(".card__delete-button").addEventListener("click",(function(){return e._handleDelete()}))}},{key:"_likeCard",value:function(e){e.target.classList.toggle("card__like-button_active")}},{key:"_handleDelete",value:function(){this._handleDeleteCard(this._id)}},{key:"delete",value:function(){this._element.remove(),this._element=null}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target===t.currentTarget&&e.close()})),this._popupCloseButton=this._popup.querySelector(".popup__cancel-button"),this._popupCloseButton.addEventListener("click",(function(){e.close()}))}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}function S(e,t){return S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},S(e,t)}function k(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return k(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._figureElement=t._popup.querySelector(".popup__image"),t._captionElement=t._popup.querySelector(".popup__image-caption"),t}return t=a,(n=[{key:"open",value:function(e,t){this._figureElement.src=e,this._figureElement.alt=t,this._captionElement.textContent=t,w(j(a.prototype),"open",this).call(this)}}])&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(b);function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=L(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function L(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=T(e)););return e}function I(e,t){return I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},I(e,t)}function R(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function T(e){return T=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},T(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=T(r);if(o){var n=T(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return R(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=t,n._form=n._popup.querySelector(".popup__form"),n._inputValues={},n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._form.querySelectorAll(".popup__input").forEach((function(t){e._inputValues[t.name]=t.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;q(T(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleSubmit(e._getInputValues())}))}},{key:"close",value:function(){q(T(a.prototype),"close",this).call(this),this._form.reset()}}])&&P(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(b);function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(){return A="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=D(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},A.apply(this,arguments)}function D(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=J(e)););return e}function V(e,t){return V=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},V(e,t)}function N(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function J(e){return J=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},J(e)}var G=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=J(r);if(o){var n=J(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return N(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleSubmit=t,n._button=n._popup.querySelector(".popup__save-button"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;A(J(a.prototype),"setEventListeners",this).call(this),this._button.addEventListener("click",(function(){e._handleSubmit(e._target)}))}},{key:"setTarget",value:function(e){this._target=e}}])&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(b);function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var H=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputElements=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this._inputElements.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e._toggleButtonState()}))})),this._toggleButtonState()}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_showInputError",value:function(e,t){var n=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),n.textContent=t,n.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButtonState():this._enableButtonState()}},{key:"disableButtonState",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0}},{key:"_enableButtonState",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}},{key:"_hasInvalidInput",value:function(){return this._inputElements.some((function(e){return!1===e.validity.valid}))}}])&&z(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var F=function(){function e(t){var n=t.nameElement,r=t.jobElement,o=t.avatarElement;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameElement=n,this._jobElement=r,this._avatarElement=o}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job;this._nameElement.textContent=t,this._jobElement.textContent=n}},{key:"fill",value:function(e){var t=e.name,n=e.about,r=e.avatar,o=e.cohort,i=e._id;this._name=t,this._job=n,this._avatar=r,this._cohort=o,this.id=i}},{key:"renderName",value:function(){this._nameElement.textContent=this._name}},{key:"renderJob",value:function(){this._jobElement.textContent=this._job}},{key:"renderAvatar",value:function(){this._avatarElement.src=this._avatar}}])&&M(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var Q={},W={};function X(e){var t=new d(e,"#card",Y,Z,ee.id);return W[e._id]=t,t.generateCard()}function Y(e,t){ie.open(e,t)}function Z(e){ae.setTarget(e),ae.open()}var $=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r,this._userInfoUrl="/users/me",this._cardsUrl="/cards"}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){var e=this._baseUrl+this._userInfoUrl;return fetch(e,{method:"GET",headers:this._headers}).then((function(e){if(e.ok)return e.json();throw new Error("Can't get user info from the server")})).catch((function(e){return console.error(e)}))}},{key:"getInitialCards",value:function(){var e=this._baseUrl+this._cardsUrl;return fetch(e,{method:"GET",headers:this._headers}).then((function(e){if(e.ok)return e.json();throw new Error("Can't get initial cards from the server")})).catch((function(e){return console.error(e)}))}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.job,r=this._baseUrl+this._userInfoUrl;return fetch(r,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then((function(e){if(e.ok)return e.json();throw new Error("Can't send user info to the server")})).catch((function(e){return console.error(e)}))}},{key:"addNewCard",value:function(e){var t=e.name,n=e.link,r=this._baseUrl+this._cardsUrl;return fetch(r,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then((function(e){if(e.ok)return e.json();throw new Error("Can't send new card to the server")})).catch((function(e){return console.error(e)}))}},{key:"deleteCard",value:function(e){var t=this._baseUrl+this._cardsUrl;return fetch("".concat(t,"/").concat(e),{method:"DELETE",headers:this._headers}).then((function(e){if(e.ok)return Promise.resolve();throw new Error("Can't delete card from the server")})).catch((function(e){return console.error(e)}))}}])&&K(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())(p),ee=new F({nameElement:t,jobElement:n,avatarElement:r});$.getUserInfo().then((function(e){ee.fill(e),ee.renderName(),ee.renderJob(),ee.renderAvatar()}));var te=new _({items:[],renderer:X},".cards");$.getInitialCards().then((function(e){e.forEach((function(e){var t=X(e);te.addItem(t)}))}));var ne,re=new B(i,(function(e){$.setUserInfo(e).then((function(e){ee.fill(e),ee.renderName(),ee.renderJob(),re.close()}))})),oe=new B(s,(function(e){$.addNewCard(e).then((function(t){te.addItem(X(e),!0),oe.close(),Q[f.getAttribute("name")].disableButtonState()}))})),ie=new O(".popup_type_image"),ae=new G(".popup_type_confirm",(function(e){$.deleteCard(e).then((function(){W[e].delete(),ae.close()}))}));ae.setEventListeners(),re.setEventListeners(),o.addEventListener("click",(function(){var e=ee.getUserInfo();u.value=e.name,c.value=e.job,u.dispatchEvent(new Event("input")),c.dispatchEvent(new Event("input")),re.open()})),oe.setEventListeners(),l.addEventListener("click",(function(){oe.open()})),ie.setEventListeners(),ne={formSelector:e,inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_visible"},Array.from(document.querySelectorAll(ne.formSelector)).forEach((function(e){var t=new H(ne,e);Q[e.getAttribute("name")]=t,t.enableValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBS08sSUFJTUEsRUFBZSxlQVFmQyxFQUFjQyxTQUFTQyxjQUFjLGtCQUNyQ0MsRUFBYUYsU0FBU0MsY0FBYyxpQkFDcENFLEVBQWdCSCxTQUFTQyxjQUFjLG9CQUN2Q0csRUFBb0JKLFNBQVNDLGNBQWMsOEJBQzNDSSxFQUEyQiwyQkFDbENDLEVBQTBCTixTQUFTQyxjQUFjSSxHQUMxQ0UsRUFBbUJELEVBQXdCTCxjQUFjLDJCQUN6RE8sRUFBa0JGLEVBQXdCTCxjQUFjLDBCQUd4RFEsRUFBZ0JULFNBQVNDLGNBQWMsNkJBQ3ZDUyxFQUF1Qix1QkFFdkJDLEVBRGVYLFNBQVNDLGNBQWNTLEdBQ0pULGNBQWNILEdBV2hEYyxFQUFZLENBQ3ZCQyxRQUFTLHFDQUFGLE9BRlEsYUFHZkMsUUFBUyxDQUNQQyxjQUxVLHVDQU1WLGVBQWdCLHFCLDBLQzdDQ0MsRUFBQUEsV0FTbkIsYUFBK0JDLEdBQW1CLElBQXJDQyxFQUFxQyxFQUFyQ0EsTUFBT0MsRUFBOEIsRUFBOUJBLFUsNEZBQThCLFNBQ2hEQyxLQUFLQyxPQUFTSCxFQUNkRSxLQUFLRSxVQUFZSCxFQUNqQkMsS0FBS0csV0FBYXZCLFNBQVNDLGNBQWNnQixHLCtDQUczQyxXQUFjLFdBQ1pHLEtBQUtDLE9BQU9HLFNBQVEsU0FBQUMsR0FDbEIsSUFBTUMsRUFBVSxFQUFLSixVQUFVRyxHQUMvQixFQUFLRSxRQUFRRCxRLHFCQUlqQixTQUFRRCxHQUEwQixJQUFwQkcsRUFBb0Isd0RBQzVCQSxFQUNGUixLQUFLRyxXQUFXTSxRQUFRSixHQUV4QkwsS0FBS0csV0FBV08sT0FBT0wsTSx5RUExQlJULEcsMEtDQUFlLEVBQUFBLFdBVW5CLGFBQ0VDLEVBQ0FDLEVBQ0FDLEVBQ0FDLEdBQVEsSUFKSUMsRUFJSixFQUpJQSxLQUFNQyxFQUlWLEVBSlVBLEtBQU1DLEVBSWhCLEVBSmdCQSxNQUFPQyxFQUl2QixFQUp1QkEsTUFBT0MsRUFJOUIsRUFKOEJBLFVBQVdDLEVBSXpDLEVBSnlDQSxLLDRGQUl6QyxTQUNSckIsS0FBS3NCLE1BQVFOLEVBQ2JoQixLQUFLdUIsTUFBUU4sRUFDYmpCLEtBQUt3QixPQUFTTixFQUNkbEIsS0FBS3lCLE9BQVNOLEVBQ2RuQixLQUFLMEIsV0FBYU4sRUFDbEJwQixLQUFLcUIsSUFBTUEsRUFDWHJCLEtBQUsyQixRQUFVWixFQUVmZixLQUFLNEIsa0JBQW9CaEIsRUFDekJaLEtBQUs2QixpQkFBbUJoQixFQUN4QmIsS0FBSzhCLGtCQUFvQmhCLEUsaURBRzNCLFdBTUUsT0FMcUJsQyxTQUNGQyxjQUFjbUIsS0FBSzRCLG1CQUNuQkcsUUFDQWxELGNBQWMsU0FDZG1ELFdBQVUsSywwQkFJL0IsV0FDRWhDLEtBQUtpQyxTQUFXakMsS0FBS2tDLGVBR3JCLElBQU1DLEVBQVFuQyxLQUFLaUMsU0FBU3BELGNBQWMsZ0JBYTFDLE9BWkFzRCxFQUFNQyxJQUFNcEMsS0FBS3VCLE1BQ2pCWSxFQUFNRSxJQUFNckMsS0FBS3NCLE1BQ2pCdEIsS0FBS2lDLFNBQVNwRCxjQUFjLGdCQUFnQnlELFlBQWN0QyxLQUFLc0IsTUFDL0R0QixLQUFLaUMsU0FBU3BELGNBQWMscUJBQXFCeUQsWUFBY3RDLEtBQUt3QixPQUFPZSxPQUV2RXZDLEtBQUt5QixPQUFPSixNQUFRckIsS0FBSzJCLFNBQzNCM0IsS0FBS2lDLFNBQVNwRCxjQUFjLHdCQUF3QjJELFNBSXREeEMsS0FBS3lDLHFCQUVFekMsS0FBS2lDLFcsZ0NBR2QsV0FBc0IsV0FDcEJqQyxLQUFLaUMsU0FDRnBELGNBQWMsc0JBQ2Q2RCxpQkFBaUIsUUFBUzFDLEtBQUsyQyxXQUVsQzNDLEtBQUtpQyxTQUNGcEQsY0FBYyxnQkFDZDZELGlCQUFpQixTQUFTLGtCQUFNLEVBQUtiLGlCQUFpQixFQUFLTixNQUFPLEVBQUtELFVBRXRFdEIsS0FBS2lDLFNBQVNwRCxjQUFjLHlCQUM1Qm1CLEtBQUtpQyxTQUNKcEQsY0FBYyx3QkFDZDZELGlCQUFpQixTQUFTLGtCQUFNLEVBQUtFLHFCLHVCQUk1QyxTQUFXQyxHQUNUQSxFQUFNQyxPQUFPQyxVQUFVQyxPQUFPLDhCLDJCQUdoQyxXQUNFaEQsS0FBSzhCLGtCQUFrQjlCLEtBQUtxQixPLG9CQUc5QixXQUNFckIsS0FBS2lDLFNBQVNPLFNBQ2R4QyxLQUFLaUMsU0FBVyxVLHNFQW5GQ3RCLEcsMEtDQUFzQyxFQUFBQSxXQVFuQixXQUFZQyxJLDRGQUFlLFNBQ3pCbEQsS0FBS21ELE9BQVN2RSxTQUFTQyxjQUFjcUUsR0FDckNsRCxLQUFLb0QsZ0JBQWtCcEQsS0FBS29ELGdCQUFnQkMsS0FBS3JELE0seUNBR25ELFdBQ0VBLEtBQUttRCxPQUFPSixVQUFVTyxJQUFJLGdCQUMxQjFFLFNBQVM4RCxpQkFBaUIsVUFBVzFDLEtBQUtvRCxtQixtQkFHNUMsV0FDRXBELEtBQUttRCxPQUFPSixVQUFVUCxPQUFPLGdCQUM3QjVELFNBQVMyRSxvQkFBb0IsVUFBV3ZELEtBQUtvRCxtQiw2QkFHL0MsU0FBZ0JJLEdBQ0UsV0FBWkEsRUFBSUMsS0FDTnpELEtBQUswRCxVLCtCQUlULFdBQW9CLFdBQ2xCMUQsS0FBS21ELE9BQU9ULGlCQUFpQixhQUFhLFNBQUNjLEdBQ3JDQSxFQUFJVixTQUFXVSxFQUFJRyxlQUFlLEVBQUtELFdBRzdDMUQsS0FBSzRELGtCQUFvQjVELEtBQUttRCxPQUFPdEUsY0FBYyx5QkFDbkRtQixLQUFLNEQsa0JBQWtCbEIsaUJBQWlCLFNBQVMsV0FDL0MsRUFBS2dCLGdCLHNFQXBDVVQsRywrdENDRUFZLEVBQUFBLFNBQUFBLEksNnJCQU9uQixXQUFZWCxHQUFlLGEsNEZBQUEsVUFDekIsY0FBTUEsSUFDRFksZUFBaUIsRUFBS1gsT0FBT3RFLGNBQWMsaUJBQ2hELEVBQUtrRixnQkFBa0IsRUFBS1osT0FBT3RFLGNBQWMseUJBSHhCLEUsaUNBTTNCLFNBQUttRixFQUFXQyxHQUNkakUsS0FBSzhELGVBQWUxQixJQUFNNEIsRUFDMUJoRSxLQUFLOEQsZUFBZXpCLElBQU00QixFQUMxQmpFLEtBQUsrRCxnQkFBZ0J6QixZQUFjMkIsRUFDbkMsOEMsc0VBakJpQkosQ0FBdUJaLEcsK3RDQ0F2QmlCLEVBQUFBLFNBQUFBLEksNnJCQVFuQixXQUFZaEIsRUFBZWlCLEdBQWMsYSw0RkFBQSxVQUN2QyxjQUFNakIsSUFDRGtCLGNBQWdCRCxFQUNyQixFQUFLRSxNQUFRLEVBQUtsQixPQUFPdEUsY0FBYyxnQkFDdkMsRUFBS3lGLGFBQWUsR0FKbUIsRSw0Q0FPekMsV0FBa0IsV0FJaEIsT0FIQXRFLEtBQUtxRSxNQUFNRSxpQkFBaUIsaUJBQWlCbkUsU0FBUSxTQUFBb0UsR0FDbkQsRUFBS0YsYUFBYUUsRUFBTXhELE1BQVF3RCxFQUFNQyxTQUVqQ3pFLEtBQUtzRSxlLCtCQUdkLFdBQW9CLFdBQ2xCLHNEQUVBdEUsS0FBS3FFLE1BQU0zQixpQkFBaUIsVUFBVSxTQUFDYyxHQUNyQ0EsRUFBSWtCLGlCQUNKLEVBQUtOLGNBQWMsRUFBS08sd0IsbUJBSTVCLFdBQ0UsMENBQ0EzRSxLQUFLcUUsTUFBTU8sYSxzRUFqQ01WLENBQXNCakIsRywrdENDQXRCNEIsRUFBQUEsU0FBQUEsSSw2ckJBQ25CLFdBQVkzQixFQUFlaUIsR0FBYyxhLDRGQUFBLFVBQ3ZDLGNBQU1qQixJQUNEa0IsY0FBZ0JELEVBQ3JCLEVBQUtXLFFBQVUsRUFBSzNCLE9BQU90RSxjQUFjLHVCQUhGLEUsOENBTXpDLFdBQW9CLFdBQ2xCLHNEQUVBbUIsS0FBSzhFLFFBQVFwQyxpQkFBaUIsU0FBUyxXQUNyQyxFQUFLMEIsY0FBYyxFQUFLVyxjLHVCQUk1QixTQUFVakMsR0FDUjlDLEtBQUsrRSxRQUFVakMsTyxzRUFoQkUrQixDQUE4QjVCLEcsMEtDRjlCK0IsRUFBQUEsV0FnQm5CLFdBQWFDLEVBQWFDLEksNEZBQWEsU0FFckNsRixLQUFLbUYsYUFBZUQsRUFFcEJsRixLQUFLb0YsY0FBZ0JILEVBQVl2RyxhQUNqQ3NCLEtBQUtxRixlQUFpQkosRUFBWUssY0FDbEN0RixLQUFLdUYsc0JBQXdCTixFQUFZTyxxQkFDekN4RixLQUFLeUYscUJBQXVCUixFQUFZUyxvQkFDeEMxRixLQUFLMkYsaUJBQW1CVixFQUFZVyxnQkFDcEM1RixLQUFLNkYsWUFBY1osRUFBWWEsV0FFL0I5RixLQUFLK0YsZUFBaUJDLE1BQU1DLEtBQUtqRyxLQUFLbUYsYUFBYVosaUJBQWlCdkUsS0FBS3FGLGlCQUN6RXJGLEtBQUtrRyxlQUFpQmxHLEtBQUttRixhQUFhdEcsY0FBY21CLEtBQUt1Rix1QixxREFHN0QsV0FDSXZGLEtBQUttRyx1QixnQ0FHVCxXQUFzQixXQUNwQm5HLEtBQUsrRixlQUFlM0YsU0FBUyxTQUFBZ0csR0FDM0JBLEVBQWExRCxpQkFBaUIsU0FBUyxXQUNyQyxFQUFLMkQsU0FBU0QsR0FDZCxFQUFLRSwyQkFLVHRHLEtBQUtzRyx1QixzQkFHUCxTQUFVRixHQUNKQSxFQUFhRyxTQUFTQyxNQUN4QnhHLEtBQUt5RyxnQkFBZ0JMLEdBRXJCcEcsS0FBSzBHLGdCQUFnQk4sRUFBY0EsRUFBYU8scUIsNkJBSXBELFNBQWlCUCxFQUFjUSxHQUM3QixJQUFNQyxFQUFlN0csS0FBS21GLGFBQWF0RyxjQUFsQixXQUFvQ3VILEVBQWFVLEdBQWpELFdBQ3JCVixFQUFhckQsVUFBVU8sSUFBSXRELEtBQUsyRixrQkFDaENrQixFQUFhdkUsWUFBY3NFLEVBQzNCQyxFQUFhOUQsVUFBVU8sSUFBSXRELEtBQUs2RixlLDZCQUdsQyxTQUFpQk8sR0FDZixJQUFNUyxFQUFlN0csS0FBS21GLGFBQWF0RyxjQUFsQixXQUFvQ3VILEVBQWFVLEdBQWpELFdBQ3JCVixFQUFhckQsVUFBVVAsT0FBT3hDLEtBQUsyRixrQkFDbkNrQixFQUFhOUQsVUFBVVAsT0FBT3hDLEtBQUs2RixhQUNuQ2dCLEVBQWF2RSxZQUFjLEssZ0NBRzdCLFdBQ010QyxLQUFLK0csbUJBQ1AvRyxLQUFLZ0gscUJBRUxoSCxLQUFLaUgsdUIsZ0NBSVQsV0FDRWpILEtBQUtrRyxlQUFlbkQsVUFBVU8sSUFBSXRELEtBQUt5RixzQkFDdkN6RixLQUFLa0csZUFBZWdCLFVBQVcsSSxnQ0FHakMsV0FDRWxILEtBQUtrRyxlQUFlbkQsVUFBVVAsT0FBT3hDLEtBQUt5RixzQkFDMUN6RixLQUFLa0csZUFBZWdCLFVBQVcsSSw4QkFHakMsV0FDRSxPQUFPbEgsS0FBSytGLGVBQWVvQixNQUFNLFNBQUFmLEdBQVksT0FBb0MsSUFBaENBLEVBQWFHLFNBQVNDLGMsc0VBeEZ0RHhCLEcsMEtDQUFvQyxFQUFBQSxXQVFuQixjQUFzRCxJQUF6Q0MsRUFBeUMsRUFBekNBLFlBQWFDLEVBQTRCLEVBQTVCQSxXQUFZQyxFQUFnQixFQUFoQkEsZSw0RkFBZ0IsU0FDcER2SCxLQUFLd0gsYUFBZUgsRUFDcEJySCxLQUFLeUgsWUFBY0gsRUFDbkJ0SCxLQUFLMEgsZUFBaUJILEUsZ0RBR3hCLFdBQ0UsTUFBTyxDQUNMdkcsS0FBTWhCLEtBQUt3SCxhQUFhbEYsWUFDeEJxRixJQUFLM0gsS0FBS3lILFlBQVluRixlLHlCQUkxQixZQUF5QixJQUFadEIsRUFBWSxFQUFaQSxLQUFNMkcsRUFBTSxFQUFOQSxJQUNqQjNILEtBQUt3SCxhQUFhbEYsWUFBY3RCLEVBQ2hDaEIsS0FBS3lILFlBQVluRixZQUFjcUYsSSxrQkFHakMsWUFBeUMsSUFBbkMzRyxFQUFtQyxFQUFuQ0EsS0FBTTRHLEVBQTZCLEVBQTdCQSxNQUFPQyxFQUFzQixFQUF0QkEsT0FBUUMsRUFBYyxFQUFkQSxPQUFRekcsRUFBTSxFQUFOQSxJQUNqQ3JCLEtBQUtzQixNQUFRTixFQUNiaEIsS0FBSytILEtBQU9ILEVBQ1o1SCxLQUFLZ0ksUUFBVUgsRUFDZjdILEtBQUtpSSxRQUFVSCxFQUNmOUgsS0FBSzhHLEdBQUt6RixJLHdCQUdaLFdBQ0VyQixLQUFLd0gsYUFBYWxGLFlBQWN0QyxLQUFLc0IsUSx1QkFHdkMsV0FDRXRCLEtBQUt5SCxZQUFZbkYsWUFBY3RDLEtBQUsrSCxPLDBCQUd0QyxXQUNFL0gsS0FBSzBILGVBQWV0RixJQUFNcEMsS0FBS2dJLGEsc0VBM0NkWixHLDBLQ29DZmMsRUFBaUIsR0FXakJDLEVBQVEsR0FFZCxTQUFTQyxFQUFXQyxHQUNsQixJQUFNQyxFQUFPLElBQUkzSCxFQUFLMEgsRVQ1Q1ksUVM0Q2dCeEgsRUFBaUJDLEVBQWtCeUgsR0FBU3pCLElBRTlGLE9BREFxQixFQUFNRSxFQUFLaEgsS0FBT2lILEVBQ1hBLEVBQUtFLGVBR2QsU0FBUzNILEVBQWdCbUQsRUFBV0MsR0FDbEN3RSxHQUFXQyxLQUFLMUUsRUFBV0MsR0FHN0IsU0FBU25ELEVBQWlCNkgsR0FDeEJDLEdBQXNCQyxVQUFVRixHQUNoQ0MsR0FBc0JGLE9BS3hCLElBQU1JLEVBQU0sSUNsRVNDLFdBQ25CLGNBQWdDLElBQW5CdEosRUFBbUIsRUFBbkJBLFFBQVNDLEVBQVUsRUFBVkEsUyw0RkFBVSxTQUM5Qk0sS0FBS2dKLFNBQVd2SixFQUNoQk8sS0FBS2lKLFNBQVd2SixFQUNoQk0sS0FBS2tKLGFBQWUsWUFDcEJsSixLQUFLbUosVUFBWSxTLGdEQUduQixXQUNFLElBQU1DLEVBQU9wSixLQUFLZ0osU0FBV2hKLEtBQUtrSixhQUVsQyxPQUFPRyxNQUFNRCxFQUFLLENBQ2hCRSxPQUFRLE1BQ1I1SixRQUFTTSxLQUFLaUosV0FFZk0sTUFBSyxTQUFBQyxHQUNKLEdBQUlBLEVBQUlDLEdBQUksT0FBT0QsRUFBSUUsT0FDdkIsTUFBTSxJQUFJQyxNQUFKLDBDQUVQQyxPQUFNLFNBQUFDLEdBQUcsT0FBSUMsUUFBUUMsTUFBTUYsUSw2QkFHOUIsV0FDRSxJQUFNVCxFQUFPcEosS0FBS2dKLFNBQVdoSixLQUFLbUosVUFFbEMsT0FBT0UsTUFBTUQsRUFBSyxDQUNoQkUsT0FBUSxNQUNSNUosUUFBU00sS0FBS2lKLFdBRWZNLE1BQUssU0FBQUMsR0FDSixHQUFJQSxFQUFJQyxHQUFJLE9BQU9ELEVBQUlFLE9BQ3ZCLE1BQU0sSUFBSUMsTUFBSiw4Q0FFUEMsT0FBTSxTQUFBQyxHQUFHLE9BQUlDLFFBQVFDLE1BQU1GLFEseUJBRzlCLFlBQXlCLElBQVo3SSxFQUFZLEVBQVpBLEtBQU0yRyxFQUFNLEVBQU5BLElBQ1h5QixFQUFPcEosS0FBS2dKLFNBQVdoSixLQUFLa0osYUFFbEMsT0FBT0csTUFBTUQsRUFBSyxDQUNoQkUsT0FBUSxRQUNSNUosUUFBU00sS0FBS2lKLFNBQ2RlLEtBQU1DLEtBQUtDLFVBQVUsQ0FDbkJsSixLQUFBQSxFQUNBNEcsTUFBT0QsTUFHVjRCLE1BQUssU0FBQUMsR0FDSixHQUFJQSxFQUFJQyxHQUFJLE9BQU9ELEVBQUlFLE9BQ3ZCLE1BQU0sSUFBSUMsTUFBSix5Q0FFUEMsT0FBTSxTQUFBQyxHQUFHLE9BQUlDLFFBQVFDLE1BQU1GLFEsd0JBRzlCLFlBQXlCLElBQWI3SSxFQUFhLEVBQWJBLEtBQU1DLEVBQU8sRUFBUEEsS0FDVm1JLEVBQU9wSixLQUFLZ0osU0FBV2hKLEtBQUttSixVQUVsQyxPQUFPRSxNQUFNRCxFQUFLLENBQ2hCRSxPQUFRLE9BQ1I1SixRQUFTTSxLQUFLaUosU0FDZGUsS0FBTUMsS0FBS0MsVUFBVSxDQUNuQmxKLEtBQUFBLEVBQ0FDLEtBQUFBLE1BR0hzSSxNQUFLLFNBQUFDLEdBQ0osR0FBSUEsRUFBSUMsR0FBSSxPQUFPRCxFQUFJRSxPQUN2QixNQUFNLElBQUlDLE1BQUosd0NBRVBDLE9BQU0sU0FBQUMsR0FBRyxPQUFJQyxRQUFRQyxNQUFNRixRLHdCQUc5QixTQUFXbEIsR0FDVCxJQUFNUyxFQUFPcEosS0FBS2dKLFNBQVdoSixLQUFLbUosVUFFbEMsT0FBT0UsTUFBTSxHQUFELE9BQUlELEVBQUosWUFBV1QsR0FBVSxDQUMvQlcsT0FBUSxTQUNSNUosUUFBU00sS0FBS2lKLFdBRWZNLE1BQUssU0FBQUMsR0FDSixHQUFJQSxFQUFJQyxHQUFJLE9BQU9VLFFBQVFDLFVBQzNCLE1BQU0sSUFBSVQsTUFBSix3Q0FFUEMsT0FBTSxTQUFBQyxHQUFHLE9BQUlDLFFBQVFDLE1BQU1GLFcsc0VBbkZYZCxHRGtFVCxDQUFRdkosR0FFZCtJLEdBQVcsSUFBSW5CLEVBQVMsQ0FDNUJDLFlBQWExSSxFQUNiMkksV0FBWXhJLEVBQ1p5SSxjQUFleEksSUFHakIrSixFQUFJdUIsY0FDRGQsTUFBSyxTQUFBQyxHQUNKakIsR0FBUytCLEtBQUtkLEdBQ2RqQixHQUFTZ0MsYUFDVGhDLEdBQVNpQyxZQUNUakMsR0FBU2tDLGtCQUliLElBQU1DLEdBQWUsSUFBSTlLLEVBQVEsQ0FDL0JFLE1BQU8sR0FDUEMsU0FBVXFJLEdUaEZpQixVU21GN0JVLEVBQUk2QixrQkFDRHBCLE1BQUssU0FBQUMsR0FDSkEsRUFBSXBKLFNBQVEsU0FBQWlJLEdBQ1YsSUFBTUMsRUFBT0YsRUFBV0MsR0FDeEJxQyxHQUFhbkssUUFBUStILFNBSzNCLElBM0R3QnJELEdBMkRsQjJGLEdBQW1CLElBQUkxRyxFQUFjakYsR0FBMEIsU0FBQW9KLEdBQ25FUyxFQUFJK0IsWUFBWXhDLEdBQ2JrQixNQUFLLFNBQUFDLEdBQ0pqQixHQUFTK0IsS0FBS2QsR0FDZGpCLEdBQVNnQyxhQUNUaEMsR0FBU2lDLFlBQ1RJLEdBQWlCbEgsY0FJakJvSCxHQUFlLElBQUk1RyxFQUFjNUUsR0FBc0IsU0FBQStJLEdBQzNEUyxFQUFJaUMsV0FBVzFDLEdBQ1prQixNQUFLLFNBQUFDLEdBQ0prQixHQUFhbkssUUFBUTZILEVBQVdDLElBQU8sR0FDdkN5QyxHQUFhcEgsUUFDYndFLEVBQWUzSSxFQUFZeUwsYUFBYSxTQUFTaEUsMkJBSWpEeUIsR0FBYSxJQUFJNUUsRVRuRlcscUJTcUY1QitFLEdBQXdCLElBQUkvRCxFVGxGTyx1QlNrRjBDLFNBQUM4RCxHQUNsRkcsRUFBSW1DLFdBQVd0QyxHQUNaWSxNQUFLLFdBQ0pwQixFQUFNUSxHQUFRdUMsU0FDZHRDLEdBQXNCbEYsY0FJNUJrRixHQUFzQnVDLG9CQU10QlAsR0FBaUJPLG9CQUVqQm5NLEVBQWtCMEQsaUJBQWlCLFNBQVMsV0FBWSxNQUlsRDZGLEdBQVM4QixjQUZMbEwsRUFBaUJzRixNQUY2QixFQUVwRHpELEtBQ0s1QixFQUFnQnFGLE1BSCtCLEVBR3BEa0QsSUFFRnhJLEVBQWlCaU0sY0FBYyxJQUFJQyxNQUFNLFVBQ3pDak0sRUFBZ0JnTSxjQUFjLElBQUlDLE1BQU0sVUFDeENULEdBQWlCbEMsVUFHbkJvQyxHQUFhSyxvQkFFYjlMLEVBQWNxRCxpQkFBaUIsU0FBUyxXQUN0Q29JLEdBQWFwQyxVQUdmRCxHQUFXMEMsb0JBaEhhbEcsR0FtSFYsQ0FDWnZHLGFBQUFBLEVBQ0E0RyxjVGpKMkIsZ0JTa0ozQkUscUJUakprQyxzQlNrSmxDRSxvQlRqSmlDLDhCU2tKakNFLGdCVGpKNkIsMEJTa0o3QkUsV1RqSndCLDhCU3lCSEUsTUFBTUMsS0FBS3JILFNBQVMyRixpQkFBaUJVLEdBQVl2RyxlQUN6RDBCLFNBQVEsU0FBQThFLEdBQ25CLElBQU1vRyxFQUFPLElBQUl0RyxFQUFjQyxHQUFhQyxHQUM1Q2dELEVBQWVoRCxFQUFZOEYsYUFBYSxTQUFXTSxFQUNuREEsRUFBS0MsdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICog0K3Qu9C10LzQtdC90YLRiyDRgdGC0YDQsNC90LjRhtGLINC4INC40YUg0YHQtdC70LXQutGC0L7RgNGLXG4gKi9cblxuLy8g0JrQvtC90YLQtdC50L3QtdGAINGBINC60LDRgNGC0L7Rh9C60LDQvNC4XG5leHBvcnQgY29uc3QgY2FyZHNTZWxlY3RvciA9ICcuY2FyZHMnO1xuZXhwb3J0IGNvbnN0IGNhcmRUZW1wbGF0ZVNlbGVjdG9yID0gJyNjYXJkJztcblxuLy8g0J7QsdGJ0LjQtSDRjdC70LXQvNC10L3RgtGLINGE0L7RgNC8XG5leHBvcnQgY29uc3QgZm9ybVNlbGVjdG9yID0gJy5wb3B1cF9fZm9ybSc7XG5leHBvcnQgY29uc3QgaW5wdXRTZWxlY3RvciA9ICcucG9wdXBfX2lucHV0JztcbmV4cG9ydCBjb25zdCBzdWJtaXRCdXR0b25TZWxlY3RvciA9ICcucG9wdXBfX3NhdmUtYnV0dG9uJztcbmV4cG9ydCBjb25zdCBpbmFjdGl2ZUJ1dHRvbkNsYXNzID0gJ3BvcHVwX19zYXZlLWJ1dHRvbl9kaXNhYmxlZCc7XG5leHBvcnQgY29uc3QgaW5wdXRFcnJvckNsYXNzID0gJ3BvcHVwX19pbnB1dF90eXBlX2Vycm9yJztcbmV4cG9ydCBjb25zdCBlcnJvckNsYXNzID0gJ3BvcHVwX19pbnB1dC1lcnJvcl92aXNpYmxlJztcblxuLy8g0KDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjQtSDQuNC90YTQvtGA0LzQsNGG0LjQuCDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LVcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZUpvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19qb2InKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2F2YXRhcicpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2J1dHRvbl90eXBlX2VkaXQnKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlRWRpdFBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX3R5cGVfZWRpdC1wcm9maWxlJztcbmNvbnN0IHByb2ZpbGVFZGl0UG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlRWRpdFBvcHVwU2VsZWN0b3IpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVOYW1lSW5wdXQgPSBwcm9maWxlRWRpdFBvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfbmFtZScpO1xuZXhwb3J0IGNvbnN0IHByb2ZpbGVKb2JJbnB1dCA9IHByb2ZpbGVFZGl0UG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9faW5wdXRfdHlwZV9qb2InKTtcblxuLy8g0JTQvtCx0LDQstC70LXQvdC40LUg0L3QvtCy0YvRhSDQutCw0YDRgtC+0YfQtdC6XG5leHBvcnQgY29uc3QgbmV3Q2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19idXR0b25fdHlwZV9hZGQnKTtcbmV4cG9ydCBjb25zdCBuZXdDYXJkUG9wdXBTZWxlY3RvciA9ICcucG9wdXBfdHlwZV9hZGQtY2FyZCc7XG5jb25zdCBuZXdDYXJkUG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihuZXdDYXJkUG9wdXBTZWxlY3Rvcik7XG5leHBvcnQgY29uc3QgbmV3Q2FyZEZvcm0gPSBuZXdDYXJkUG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoZm9ybVNlbGVjdG9yKTtcblxuIC8vINCf0L7Qv9Cw0L8g0YEg0YPQstC10LvQuNGH0LXQvdC90YvQvCDQuNC30L7QsdGA0LDQttC10L3QuNC10LxcbmV4cG9ydCBjb25zdCBpbWFnZVBvcHVwU2VsZWN0b3IgPSAnLnBvcHVwX3R5cGVfaW1hZ2UnO1xuXG4vLyDQn9C+0L/QsNC/INGBINC/0L7QtNGC0LLQtdGA0LbQtNC10L3QuNC10LxcbmV4cG9ydCBjb25zdCBjb25maXJtYXRpb25Qb3B1cFNlbGVjdG9yID0gJy5wb3B1cF90eXBlX2NvbmZpcm0nO1xuXG4vLyDQndCw0YHRgtGA0L7QudC60Lgg0LTQu9GPINC/0L7QtNC60LvRjtGH0LXQvdC40Y8g0Log0YHQtdGA0LLQtdGA0YNcbmNvbnN0IHRva2VuID0gJ2I1MDI0ZTk3LTY4Y2EtNDQ4MC1iZjM2LTU0MzA3OGRlMjRhMic7XG5jb25zdCBjb2hvcnRJZCA9ICdjb2hvcnQtNDEnO1xuZXhwb3J0IGNvbnN0IGFwaUNvbmZpZyA9IHtcbiAgYmFzZVVybDogYGh0dHBzOi8vbWVzdG8ubm9tb3JlcGFydGllcy5jby92MS8ke2NvaG9ydElkfWAsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiB0b2tlbixcbiAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gIH1cbn07XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgLyoqXG4gICAqINCa0LvQsNGB0YEg0L7RgtCy0LXRh9Cw0LXRgiDQt9CwINC+0YLRgNC40YHQvtCy0LrRgyDRjdC70LXQvNC10L3RgtC+0LIg0L3QsCDRgdGC0YDQsNC90LjRhtC1XG4gICAqXG4gICAqINCf0LDRgNCw0LzQtdGC0YDRizpcbiAgICogaXRlbXMgLSDQvNCw0YHRgdC40LIg0LTQsNC90L3Ri9GFLCDQutC+0YLQvtGA0YvQtSDQvdGD0LbQvdC+INC00L7QsdCw0LLQuNGC0Ywg0L3QsCDRgdGC0YDQsNC90LjRhtGDINC/0YDQuCDQuNC90LjRhtC40LDQu9C40LfQsNGG0LjQuCDQutC70LDRgdGB0LAsXG4gICAqIHJlbmRlcmVyIC0g0YTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINC+0YLQstC10YfQsNC10YIg0LfQsCDRgdC+0LfQtNCw0L3QuNC1INC4INC+0YLRgNC40YHQvtCy0LrRgyDQtNCw0L3QvdGL0YUg0L3QsCDRgdGC0YDQsNC90LjRhtC1LFxuICAgKiBjb250YWluZXJTZWxlY3RvciAtINGB0LXQu9C10LrRgtC+0YAg0LrQvtC90YLQtdC50L3QtdGA0LAsINCyINC60L7RgtC+0YDRi9C5INC90YPQttC90L4g0LTQvtCx0LDQstC70Y/RgtGMINGB0L7Qt9C00LDQvdC90YvQtSDRjdC70LXQvNC10L3RgtGLXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih7aXRlbXMsIHJlbmRlcmVyfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9pdGVtcyA9IGl0ZW1zO1xuICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihjb250YWluZXJTZWxlY3Rvcik7XG4gIH1cblxuICByZW5kZXJJdGVtcygpIHtcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xuICAgICAgdGhpcy5hZGRJdGVtKGVsZW1lbnQpO1xuICAgIH0pXG4gIH1cblxuICBhZGRJdGVtKGl0ZW0sIGlzSW52ZXJzZWQgPSBmYWxzZSkge1xuICAgIGlmIChpc0ludmVyc2VkKSB7XG4gICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChpdGVtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fY29udGFpbmVyLmFwcGVuZChpdGVtKTtcbiAgICB9XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICAvKipcbiAgICog0JrQu9Cw0YHRgSDQvtGC0LLQtdGH0LDQtdGCINC30LAg0YHQvtC30LTQsNC90LjQtSDQutCw0YDRgtC+0YfQutC4XG4gICAqXG4gICAqINCf0LDRgNCw0LzQtdGC0YDRizpcbiAgICogbmFtZSAtINC+0YLQvtCx0YDQsNC20LDQtdC80YvQuSDQt9Cw0LPQvtC70L7QstC+0Log0LrQsNGA0YLQvtGH0LrQuFxuICAgKiBsaW5rIC0g0YHRgdGL0LvQutCwINC90LAg0LjQt9C+0LHRgNCw0LbQtdC90LjQtVxuICAgKiB0ZW1wbGF0ZVNlbGVjdG9yIC0g0YHQtdC70LXQutGC0L7RgCB0ZW1wbGF0ZS3RjdC70LXQvNC10L3RgtCwINGBINGI0LDQsdC70L7QvdC+0Lwg0LrQsNGA0YLQvtGH0LrQuFxuICAgKiBoYW5kbGVDYXJkQ2xpY2sgLSDQvtCx0YDQsNCx0L7RgtGH0LjQuiDQvdCw0LbQsNGC0LjRjyDQvdCwINC40LfQvtCx0YDQsNC20LXQvdC40LUg0LrQsNGA0YLQvtGH0LrQuFxuICAgKi9cbiAgY29uc3RydWN0b3IgKHtuYW1lLCBsaW5rLCBsaWtlcywgb3duZXIsIGNyZWF0ZWRBdCwgX2lkfSxcbiAgICB0ZW1wbGF0ZVNlbGVjdG9yLFxuICAgIGhhbmRsZUNhcmRDbGljayxcbiAgICBoYW5kbGVEZWxldGVDYXJkLFxuICAgIHVzZXJJZCkge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuX2xpbmsgPSBsaW5rO1xuICAgIHRoaXMuX2xpa2VzID0gbGlrZXM7XG4gICAgdGhpcy5fb3duZXIgPSBvd25lcjtcbiAgICB0aGlzLl9jcmVhdGVkQXQgPSBjcmVhdGVkQXQ7XG4gICAgdGhpcy5faWQgPSBfaWQ7XG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuXG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XG4gICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQgPSBoYW5kbGVEZWxldGVDYXJkO1xuICB9XG5cbiAgX2dldFRlbXBsYXRlICgpIHtcbiAgICBjb25zdCBjYXJkVGVtcGxhdGUgPSBkb2N1bWVudFxuICAgICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpXG4gICAgICAgICAgICAgICAgICAgICAgLmNvbnRlbnRcbiAgICAgICAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcignLmNhcmQnKVxuICAgICAgICAgICAgICAgICAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgcmV0dXJuIGNhcmRUZW1wbGF0ZTtcbiAgfVxuXG4gIGdlbmVyYXRlQ2FyZCAoKSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG5cbiAgICAvLyDQl9Cw0L/QvtC70L3QtdC90LjQtSDRgdC+0LTQtdGA0LbQuNC80L7Qs9C+XG4gICAgY29uc3QgaW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19pbWFnZScpO1xuICAgIGltYWdlLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgaW1hZ2UuYWx0ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX190aXRsZScpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19saWtlLWNvdW50JykudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlcy5sZW5ndGg7XG5cbiAgICBpZiAodGhpcy5fb3duZXIuX2lkICE9PSB0aGlzLl91c2VySWQpIHtcbiAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmNhcmRfX2RlbGV0ZS1idXR0b24nKS5yZW1vdmUoKTtcbiAgICB9XG5cbiAgICAvLyDQntCx0YDQsNCx0L7RgtGH0LjQutC4INC90LDQttCw0YLQuNC5XG4gICAgdGhpcy5fc2V0RXZlbnRsaXN0ZW5lcnMoKTtcblxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xuICB9XG5cbiAgX3NldEV2ZW50bGlzdGVuZXJzICgpIHtcbiAgICB0aGlzLl9lbGVtZW50XG4gICAgICAucXVlcnlTZWxlY3RvcignLmNhcmRfX2xpa2UtYnV0dG9uJylcbiAgICAgIC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2xpa2VDYXJkKTtcblxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKCcuY2FyZF9faW1hZ2UnKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4gdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX2xpbmssIHRoaXMuX25hbWUpKTtcblxuICAgIGlmICh0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkX19kZWxldGUtYnV0dG9uJykpIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudFxuICAgICAgICAucXVlcnlTZWxlY3RvcignLmNhcmRfX2RlbGV0ZS1idXR0b24nKVxuICAgICAgICAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGUoKSk7XG4gICAgICB9XG4gIH1cblxuICBfbGlrZUNhcmQgKGV2ZW50KSB7XG4gICAgZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ2NhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xuICB9XG5cbiAgX2hhbmRsZURlbGV0ZSAoKSB7XG4gICAgdGhpcy5faGFuZGxlRGVsZXRlQ2FyZCh0aGlzLl9pZCk7XG4gIH1cblxuICBkZWxldGUgKCkge1xuICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XG4gICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgLyoqXG4gICAqINCa0LvQsNGB0YEg0L7RgtCy0LXRh9Cw0LXRgiDQt9CwINC+0YLQutGA0YvRgtC40LUg0Lgg0LfQsNC60YDRi9GC0LjQtSDQv9C+0L/QsNC/0LBcbiAgICpcbiAgICog0J/QsNGA0LDQvNC10YLRgNGLOlxuICAgKiBwb3B1cFNlbGVjdG9yIC0g0YHQtdC70LXQutGC0L7RgCDQv9C+0L/QsNC/0LBcbiAgICpcbiAgICovXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9wb3B1cCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb3BlbigpIHtcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICBpZiAoZXZ0LmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoZXZ0LnRhcmdldCA9PT0gZXZ0LmN1cnJlbnRUYXJnZXQpIHRoaXMuY2xvc2UoKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX3BvcHVwQ2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2NhbmNlbC1idXR0b24nKTtcbiAgICB0aGlzLl9wb3B1cENsb3NlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5jbG9zZSgpO1xuICAgIH0pO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIC8qKlxuICAgKiDQmtC70LDRgdGBINC+0YLQstC10YfQsNC10YIg0LfQsCDRgNCw0LHQvtGC0YMg0YEg0L/QvtC/0LDQv9C+0LwsINGB0L7QtNC10YDQttCw0YnQuNC8INGD0LLQtdC70LjRh9C10L3QvdC+0LUg0LjQt9C+0LHRgNCw0LbQtdC90LjQtVxuICAgKlxuICAgKiDQn9Cw0YDQsNC80LXRgtGA0Ys6XG4gICAqIHBvcHVwU2VsZWN0b3IgLSDRgdC10LvQtdC60YLQvtGAINGN0LvQtdC80LXQvdGC0LAg0YEg0L/QvtC/0LDQv9C+0LxcbiAgICovXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9maWd1cmVFbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZScpO1xuICAgIHRoaXMuX2NhcHRpb25FbGVtZW50ID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbWFnZS1jYXB0aW9uJyk7XG4gIH1cblxuICBvcGVuKGltYWdlTGluaywgdGV4dCkge1xuICAgIHRoaXMuX2ZpZ3VyZUVsZW1lbnQuc3JjID0gaW1hZ2VMaW5rO1xuICAgIHRoaXMuX2ZpZ3VyZUVsZW1lbnQuYWx0ID0gdGV4dDtcbiAgICB0aGlzLl9jYXB0aW9uRWxlbWVudC50ZXh0Q29udGVudCA9IHRleHQ7XG4gICAgc3VwZXIub3BlbigpO1xuICB9XG59XG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcbiAgLyoqXG4gICAqINCa0LvQsNGB0YEg0L7RgtCy0LXRh9Cw0LXRgiDQt9CwINGA0LDQsdC+0YLRgyDRgSDQv9C+0L/QsNC/0L7QvCwg0YHQvtC00LXRgNC20LDRidC40Lwg0YTQvtGA0LzRg1xuICAgKlxuICAgKiDQn9Cw0YDQsNC80LXRgtGA0Ys6XG4gICAqIHBvcHVwU2VsZWN0b3IgLSDRgdC10LvQtdC60YLQvtGAINGN0LvQtdC80LXQvdGC0LAg0YEg0L/QvtC/0LDQv9C+0LxcbiAgICogaGFuZGxlU3VibWl0IC0g0L7QsdGA0LDQsdC+0YLRh9C40Log0L7RgtC/0YDQsNCy0LrQuCDRhNC+0YDQvNGLXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVTdWJtaXQpIHtcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSBoYW5kbGVTdWJtaXQ7XG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xuICAgIHRoaXMuX2lucHV0VmFsdWVzID0ge307XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JykuZm9yRWFjaChpbnB1dCA9PiB7XG4gICAgICB0aGlzLl9pbnB1dFZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLl9pbnB1dFZhbHVlcztcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xuICAgIH0pO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgc3VwZXIuY2xvc2UoKTtcbiAgICB0aGlzLl9mb3JtLnJlc2V0KCk7XG4gIH1cbn1cbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhDb25maXJtYXRpb24gZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IsIGhhbmRsZVN1Ym1pdCkge1xuICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCA9IGhhbmRsZVN1Ym1pdDtcbiAgICB0aGlzLl9idXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnV0dG9uJyk7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgdGhpcy5fYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgdGhpcy5faGFuZGxlU3VibWl0KHRoaXMuX3RhcmdldCk7XG4gICAgfSk7XG4gIH1cblxuICBzZXRUYXJnZXQodGFyZ2V0KSB7XG4gICAgdGhpcy5fdGFyZ2V0ID0gdGFyZ2V0O1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgLyoqXG4gICAqINCa0LvQsNGB0YEg0L7RgtCy0LXRh9Cw0LXRgiDQt9CwINCy0LDQu9C40LTQsNGG0LjRjiDRhNC+0YDQvNGLLCDQvtGC0L7QsdGA0LDQttC10L3QuNC1L9GB0LrRgNGL0YLQuNC1INC+0YjQuNCx0L7Quiwg0L7RgtC+0LHRgNCw0LbQtdC90LjQtSDQutC90L7Qv9C60Lgg0L7RgtC/0YDQsNCy0LrQuFxuICAgKlxuICAgKiDQn9Cw0YDQsNC80LXRgtGA0Ys6XG4gICAqIGZvcm1DbGFzc2VzIC0g0YHQtdC70LXQutGC0L7RgNGLINC4INC60LvQsNGB0YHRiyDRjdC70LXQvNC10L3RgtC+0LIg0YTQvtGA0LzRiywg0YTQvtGA0LzQsNGCOlxuICAgKiB7XG4gICAqICAgZm9ybVNlbGVjdG9yLFxuICAgKiAgIGlucHV0U2VsZWN0b3IsXG4gICAqICAgc3VibWl0QnV0dG9uU2VsZWN0b3IsXG4gICAqICAgaW5hY3RpdmVCdXR0b25DbGFzcyxcbiAgICogICBpbnB1dEVycm9yQ2xhc3MsXG4gICAqICAgZXJyb3JDbGFzc1xuICAgKiB9XG4gICAqIGZvcm1FbGVtZW50IC0g0Y3Qu9C10LzQtdC90YIg0YEg0LLQsNC70LjQtNC40YDRg9C10LzQvtC5INGE0L7RgNC80L7QuVxuICAgKi9cbiAgY29uc3RydWN0b3IgKGZvcm1DbGFzc2VzLCBmb3JtRWxlbWVudCkge1xuICAgIC8vINCk0L7RgNC80LBcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICAgIC8vINCh0LXQu9C10LrRgtC+0YDRiyDQuCDQutC70LDRgdGB0YtcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBmb3JtQ2xhc3Nlcy5mb3JtU2VsZWN0b3I7XG4gICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGZvcm1DbGFzc2VzLmlucHV0U2VsZWN0b3I7XG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBmb3JtQ2xhc3Nlcy5zdWJtaXRCdXR0b25TZWxlY3RvcjtcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gZm9ybUNsYXNzZXMuaW5hY3RpdmVCdXR0b25DbGFzcztcbiAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBmb3JtQ2xhc3Nlcy5pbnB1dEVycm9yQ2xhc3M7XG4gICAgdGhpcy5fZXJyb3JDbGFzcyA9IGZvcm1DbGFzc2VzLmVycm9yQ2xhc3M7XG4gICAgLy8g0K3Qu9C10LzQtdC90YLRiyDRhNC+0YDQvNGLXG4gICAgdGhpcy5faW5wdXRFbGVtZW50cyA9IEFycmF5LmZyb20odGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKSk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICB9XG5cbiAgZW5hYmxlVmFsaWRhdGlvbiAoKSB7XG4gICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzICgpIHtcbiAgICB0aGlzLl9pbnB1dEVsZW1lbnRzLmZvckVhY2goIGlucHV0RWxlbWVudCA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2lzVmFsaWQoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgLy8g0J7Qv9GA0LXQtNC10LvRj9C10YIg0LjRgdGF0L7QtNC90L7QtSDQv9C+0LvQvtC20LXQvdC40LUg0LrQvdC+0L/QutC4XG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgfVxuXG4gIF9pc1ZhbGlkIChpbnB1dEVsZW1lbnQpIHtcbiAgICBpZiAoaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfVxuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yIChpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9lcnJvckNsYXNzKTtcbiAgfVxuXG4gIF9oaWRlSW5wdXRFcnJvciAoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XG4gIH1cblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUgKCkge1xuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgdGhpcy5kaXNhYmxlQnV0dG9uU3RhdGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZW5hYmxlQnV0dG9uU3RhdGUoKTtcbiAgICB9XG4gIH1cblxuICBkaXNhYmxlQnV0dG9uU3RhdGUgKCkge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmRpc2FibGVkID0gdHJ1ZTtcbiAgfVxuXG4gIF9lbmFibGVCdXR0b25TdGF0ZSAoKSB7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxuXG4gIF9oYXNJbnZhbGlkSW5wdXQgKCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dEVsZW1lbnRzLnNvbWUoIGlucHV0RWxlbWVudCA9PiBpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQgPT09IGZhbHNlKTtcbiAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICAvKipcbiAgICog0JrQu9Cw0YHRgSDQvtGC0LLQtdGH0LDQtdGCINC30LAg0L/QvtC70YPRh9C10L3QuNC1INC4INC40LfQvNC10L3QtdC90LjQtSDQuNC90YTQvtGA0LzQsNGG0LjQuCDQviDQv9C+0LvRjNC30L7QstCw0YLQtdC70LVcbiAgICpcbiAgICog0J/QsNGA0LDQvNC10YLRgNGLOlxuICAgKiBuYW1lRWxlbWVudCAtINGN0LvQtdC80LXQvdGCINGBINC40LzQtdC90LXQvCDQv9C+0LvRjNC30L7QstCw0YLQtdC70Y9cbiAgICogam9iRWxlbWVudCAtINGN0LvQtdC80LXQvdGCINGBINC+0L/QuNGB0LDQvdC40LXQvCDQtNC10Y/RgtC10LvRjNC90L7RgdGC0Lgg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GPXG4gICAqL1xuICBjb25zdHJ1Y3Rvcih7bmFtZUVsZW1lbnQsIGpvYkVsZW1lbnQsIGF2YXRhckVsZW1lbnR9KSB7XG4gICAgdGhpcy5fbmFtZUVsZW1lbnQgPSBuYW1lRWxlbWVudDtcbiAgICB0aGlzLl9qb2JFbGVtZW50ID0gam9iRWxlbWVudDtcbiAgICB0aGlzLl9hdmF0YXJFbGVtZW50ID0gYXZhdGFyRWxlbWVudDtcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkgeyAvLyDRg9Cx0YDQsNGC0YxcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQsXG4gICAgICBqb2I6IHRoaXMuX2pvYkVsZW1lbnQudGV4dENvbnRlbnRcbiAgICB9XG4gIH1cblxuICBzZXRVc2VySW5mbyh7bmFtZSwgam9ifSkgeyAvLyDRg9Cx0YDQsNGC0YxcbiAgICB0aGlzLl9uYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IG5hbWU7XG4gICAgdGhpcy5fam9iRWxlbWVudC50ZXh0Q29udGVudCA9IGpvYjtcbiAgfVxuXG4gIGZpbGwoe25hbWUsIGFib3V0LCBhdmF0YXIsIGNvaG9ydCwgX2lkfSkge1xuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xuICAgIHRoaXMuX2pvYiA9IGFib3V0O1xuICAgIHRoaXMuX2F2YXRhciA9IGF2YXRhcjtcbiAgICB0aGlzLl9jb2hvcnQgPSBjb2hvcnQ7XG4gICAgdGhpcy5pZCA9IF9pZDtcbiAgfVxuXG4gIHJlbmRlck5hbWUoKSB7XG4gICAgdGhpcy5fbmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICB9XG5cbiAgcmVuZGVySm9iKCkge1xuICAgIHRoaXMuX2pvYkVsZW1lbnQudGV4dENvbnRlbnQgPSB0aGlzLl9qb2I7XG4gIH1cblxuICByZW5kZXJBdmF0YXIoKSB7XG4gICAgdGhpcy5fYXZhdGFyRWxlbWVudC5zcmMgPSB0aGlzLl9hdmF0YXI7XG4gIH1cblxuXG59XG4iLCIvLyDQmNC80L/QvtGA0YIg0LTQsNC90L3Ri9GFINC40Lcg0LTRgNGD0LPQuNGFINC80L7QtNGD0LvQtdC5XG5pbXBvcnQge1xuICBjYXJkc1NlbGVjdG9yLFxuICBjYXJkVGVtcGxhdGVTZWxlY3RvcixcbiAgZm9ybVNlbGVjdG9yLFxuICBpbnB1dFNlbGVjdG9yLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcixcbiAgaW5hY3RpdmVCdXR0b25DbGFzcyxcbiAgaW5wdXRFcnJvckNsYXNzLFxuICBlcnJvckNsYXNzLFxuICBwcm9maWxlTmFtZSxcbiAgcHJvZmlsZUpvYixcbiAgcHJvZmlsZUF2YXRhcixcbiAgcHJvZmlsZUVkaXRCdXR0b24sXG4gIHByb2ZpbGVOYW1lSW5wdXQsXG4gIHByb2ZpbGVKb2JJbnB1dCxcbiAgcHJvZmlsZUVkaXRQb3B1cFNlbGVjdG9yLFxuICBuZXdDYXJkQnV0dG9uLFxuICBuZXdDYXJkRm9ybSxcbiAgbmV3Q2FyZFBvcHVwU2VsZWN0b3IsXG4gIGltYWdlUG9wdXBTZWxlY3RvcixcbiAgY29uZmlybWF0aW9uUG9wdXBTZWxlY3RvcixcbiAgYXBpQ29uZmlnXG59IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XG5cbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQuanMnO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtYXRpb24gZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhDb25maXJtYXRpb24uanMnO1xuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcbmltcG9ydCBVc2VySW5mbyBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcbmltcG9ydCBBcGkgZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnO1xuaW1wb3J0ICcuL2luZGV4LmNzcyc7IC8vINC40LzQv9C+0YDRgiBjc3Mt0YHRgtC40LvQtdC5INC00LvRjyDRgdCx0L7RgNC60Lgg0LIgV2VicGFja1xuXG4vLyDQpNGD0L3QutGG0LjQuFxuY29uc3QgZm9ybVZhbGlkYXRvcnMgPSB7fTtcblxuZnVuY3Rpb24gdmFsaWRhdGVGb3JtcyAoZm9ybUNsYXNzZXMpIHtcbiAgY29uc3QgZm9ybUVsZW1lbnRzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGZvcm1DbGFzc2VzLmZvcm1TZWxlY3RvcikpO1xuICBmb3JtRWxlbWVudHMuZm9yRWFjaChmb3JtRWxlbWVudCA9PiB7XG4gICAgY29uc3QgZm9ybSA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1DbGFzc2VzLCBmb3JtRWxlbWVudCk7XG4gICAgZm9ybVZhbGlkYXRvcnNbZm9ybUVsZW1lbnQuZ2V0QXR0cmlidXRlKCduYW1lJyldID0gZm9ybTtcbiAgICBmb3JtLmVuYWJsZVZhbGlkYXRpb24oKTtcbiAgfSk7XG59XG5cbmNvbnN0IGNhcmRzID0ge307XG5cbmZ1bmN0aW9uIHJlbmRlckNhcmQoZGF0YSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoZGF0YSwgY2FyZFRlbXBsYXRlU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaywgaGFuZGxlRGVsZXRlQ2FyZCwgdXNlckluZm8uaWQpO1xuICBjYXJkc1tkYXRhLl9pZF0gPSBjYXJkO1xuICByZXR1cm4gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlQ2FyZENsaWNrKGltYWdlTGluaywgdGV4dCkge1xuICBpbWFnZVBvcHVwLm9wZW4oaW1hZ2VMaW5rLCB0ZXh0KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2FyZChjYXJkSWQpIHtcbiAgcG9wdXBXaXRoQ29uZmlybWF0aW9uLnNldFRhcmdldChjYXJkSWQpO1xuICBwb3B1cFdpdGhDb25maXJtYXRpb24ub3BlbigpO1xufVxuXG5cbi8vINCY0L3QuNGG0LjQsNC70LjQt9Cw0YbQuNGPINC60LvQsNGB0YHQvtCyXG5jb25zdCBhcGkgPSBuZXcgQXBpKGFwaUNvbmZpZyk7XG5cbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcbiAgbmFtZUVsZW1lbnQ6IHByb2ZpbGVOYW1lLFxuICBqb2JFbGVtZW50OiBwcm9maWxlSm9iLFxuICBhdmF0YXJFbGVtZW50OiBwcm9maWxlQXZhdGFyXG59KTtcblxuYXBpLmdldFVzZXJJbmZvKClcbiAgLnRoZW4ocmVzID0+IHtcbiAgICB1c2VySW5mby5maWxsKHJlcyk7XG4gICAgdXNlckluZm8ucmVuZGVyTmFtZSgpO1xuICAgIHVzZXJJbmZvLnJlbmRlckpvYigpO1xuICAgIHVzZXJJbmZvLnJlbmRlckF2YXRhcigpO1xuICB9KTtcblxuXG5jb25zdCBjYXJkc1NlY3Rpb24gPSBuZXcgU2VjdGlvbih7XG4gIGl0ZW1zOiBbXSxcbiAgcmVuZGVyZXI6IHJlbmRlckNhcmRcbn0sIGNhcmRzU2VsZWN0b3IpO1xuXG5hcGkuZ2V0SW5pdGlhbENhcmRzKClcbiAgLnRoZW4ocmVzID0+IHtcbiAgICByZXMuZm9yRWFjaChkYXRhID0+IHtcbiAgICAgIGNvbnN0IGNhcmQgPSByZW5kZXJDYXJkKGRhdGEpO1xuICAgICAgY2FyZHNTZWN0aW9uLmFkZEl0ZW0oY2FyZCk7XG4gICAgfSk7XG59KTtcblxuXG5jb25zdCBwcm9maWxlRWRpdFBvcHVwID0gbmV3IFBvcHVwV2l0aEZvcm0ocHJvZmlsZUVkaXRQb3B1cFNlbGVjdG9yLCBkYXRhID0+IHtcbiAgYXBpLnNldFVzZXJJbmZvKGRhdGEpXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIHVzZXJJbmZvLmZpbGwocmVzKTtcbiAgICAgIHVzZXJJbmZvLnJlbmRlck5hbWUoKTtcbiAgICAgIHVzZXJJbmZvLnJlbmRlckpvYigpO1xuICAgICAgcHJvZmlsZUVkaXRQb3B1cC5jbG9zZSgpO1xuICAgIH0pO1xufSk7XG5cbmNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKG5ld0NhcmRQb3B1cFNlbGVjdG9yLCBkYXRhID0+IHtcbiAgYXBpLmFkZE5ld0NhcmQoZGF0YSlcbiAgICAudGhlbihyZXMgPT4ge1xuICAgICAgY2FyZHNTZWN0aW9uLmFkZEl0ZW0ocmVuZGVyQ2FyZChkYXRhKSwgdHJ1ZSk7XG4gICAgICBuZXdDYXJkUG9wdXAuY2xvc2UoKTtcbiAgICAgIGZvcm1WYWxpZGF0b3JzW25ld0NhcmRGb3JtLmdldEF0dHJpYnV0ZSgnbmFtZScpXS5kaXNhYmxlQnV0dG9uU3RhdGUoKTtcbiAgICB9KTtcbn0pO1xuXG5jb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKGltYWdlUG9wdXBTZWxlY3Rvcik7XG5cbmNvbnN0IHBvcHVwV2l0aENvbmZpcm1hdGlvbiA9IG5ldyBQb3B1cFdpdGhDb25maXJtYXRpb24oY29uZmlybWF0aW9uUG9wdXBTZWxlY3RvciwgKGNhcmRJZCkgPT4ge1xuICBhcGkuZGVsZXRlQ2FyZChjYXJkSWQpXG4gICAgLnRoZW4oKCkgPT4ge1xuICAgICAgY2FyZHNbY2FyZElkXS5kZWxldGUoKTtcbiAgICAgIHBvcHVwV2l0aENvbmZpcm1hdGlvbi5jbG9zZSgpO1xuICAgIH0pXG59KTtcblxucG9wdXBXaXRoQ29uZmlybWF0aW9uLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblxuXG5cbi8vINCj0YHRgtCw0L3QvtCy0LrQsCDRgdC70YPRiNCw0YLQtdC70LXQuSDRgdC+0LHRi9GC0LjQuVxucHJvZmlsZUVkaXRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5wcm9maWxlRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uICgpIHtcbiAgKHtcbiAgICBuYW1lOiBwcm9maWxlTmFtZUlucHV0LnZhbHVlLFxuICAgIGpvYjogcHJvZmlsZUpvYklucHV0LnZhbHVlXG4gIH0gPSB1c2VySW5mby5nZXRVc2VySW5mbygpKTtcbiAgcHJvZmlsZU5hbWVJbnB1dC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnaW5wdXQnKSk7XG4gIHByb2ZpbGVKb2JJbnB1dC5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnaW5wdXQnKSk7XG4gIHByb2ZpbGVFZGl0UG9wdXAub3BlbigpO1xufSk7XG5cbm5ld0NhcmRQb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuXG5uZXdDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICBuZXdDYXJkUG9wdXAub3BlbigpO1xufSk7XG5cbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8g0JLRi9C30L7QsiDRhNGD0L3QutGG0LjQuSDQuCDQvNC10YLQvtC00L7QsiDQv9GA0Lgg0LfQsNCz0YDRg9C30LrQtSDRgdGC0YDQsNC90LjRhtGLXG52YWxpZGF0ZUZvcm1zKHtcbiAgZm9ybVNlbGVjdG9yLFxuICBpbnB1dFNlbGVjdG9yLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcixcbiAgaW5hY3RpdmVCdXR0b25DbGFzcyxcbiAgaW5wdXRFcnJvckNsYXNzLFxuICBlcnJvckNsYXNzXG59KTtcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gIGNvbnN0cnVjdG9yKHtiYXNlVXJsLCBoZWFkZXJzfSkge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBiYXNlVXJsO1xuICAgIHRoaXMuX2hlYWRlcnMgPSBoZWFkZXJzO1xuICAgIHRoaXMuX3VzZXJJbmZvVXJsID0gJy91c2Vycy9tZSc7XG4gICAgdGhpcy5fY2FyZHNVcmwgPSAnL2NhcmRzJztcbiAgfVxuXG4gIGdldFVzZXJJbmZvKCkge1xuICAgIGNvbnN0IHVybCA9ICB0aGlzLl9iYXNlVXJsICsgdGhpcy5fdXNlckluZm9Vcmw7XG5cbiAgICByZXR1cm4gZmV0Y2godXJsLCB7XG4gICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICBpZiAocmVzLm9rKSByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ2FuJ3QgZ2V0IHVzZXIgaW5mbyBmcm9tIHRoZSBzZXJ2ZXJgKTtcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcbiAgfVxuXG4gIGdldEluaXRpYWxDYXJkcygpIHtcbiAgICBjb25zdCB1cmwgPSAgdGhpcy5fYmFzZVVybCArIHRoaXMuX2NhcmRzVXJsO1xuXG4gICAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgICAgbWV0aG9kOiAnR0VUJyxcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSlcbiAgICAudGhlbihyZXMgPT4ge1xuICAgICAgaWYgKHJlcy5vaykgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbid0IGdldCBpbml0aWFsIGNhcmRzIGZyb20gdGhlIHNlcnZlcmApO1xuICAgIH0pXG4gICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGVycikpO1xuICB9XG5cbiAgc2V0VXNlckluZm8oe25hbWUsIGpvYn0pIHtcbiAgICBjb25zdCB1cmwgPSAgdGhpcy5fYmFzZVVybCArIHRoaXMuX3VzZXJJbmZvVXJsO1xuXG4gICAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYWJvdXQ6IGpvYlxuICAgICAgfSlcbiAgICB9KVxuICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICBpZiAocmVzLm9rKSByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ2FuJ3Qgc2VuZCB1c2VyIGluZm8gdG8gdGhlIHNlcnZlcmApO1xuICAgIH0pXG4gICAgLmNhdGNoKGVyciA9PiBjb25zb2xlLmVycm9yKGVycikpO1xuICB9XG5cbiAgYWRkTmV3Q2FyZCh7bmFtZSwgbGlua30pIHtcbiAgICBjb25zdCB1cmwgPSAgdGhpcy5fYmFzZVVybCArIHRoaXMuX2NhcmRzVXJsO1xuXG4gICAgcmV0dXJuIGZldGNoKHVybCwge1xuICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rXG4gICAgICB9KVxuICAgIH0pXG4gICAgLnRoZW4ocmVzID0+IHtcbiAgICAgIGlmIChyZXMub2spIHJldHVybiByZXMuanNvbigpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW4ndCBzZW5kIG5ldyBjYXJkIHRvIHRoZSBzZXJ2ZXJgKTtcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoY2FyZElkKSB7XG4gICAgY29uc3QgdXJsID0gIHRoaXMuX2Jhc2VVcmwgKyB0aGlzLl9jYXJkc1VybDtcblxuICAgIHJldHVybiBmZXRjaChgJHt1cmx9LyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogJ0RFTEVURScsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXG4gICAgfSlcbiAgICAudGhlbihyZXMgPT4ge1xuICAgICAgaWYgKHJlcy5vaykgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW4ndCBkZWxldGUgY2FyZCBmcm9tIHRoZSBzZXJ2ZXJgKTtcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcihlcnIpKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImZvcm1TZWxlY3RvciIsInByb2ZpbGVOYW1lIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwicHJvZmlsZUpvYiIsInByb2ZpbGVBdmF0YXIiLCJwcm9maWxlRWRpdEJ1dHRvbiIsInByb2ZpbGVFZGl0UG9wdXBTZWxlY3RvciIsInByb2ZpbGVFZGl0UG9wdXBFbGVtZW50IiwicHJvZmlsZU5hbWVJbnB1dCIsInByb2ZpbGVKb2JJbnB1dCIsIm5ld0NhcmRCdXR0b24iLCJuZXdDYXJkUG9wdXBTZWxlY3RvciIsIm5ld0NhcmRGb3JtIiwiYXBpQ29uZmlnIiwiYmFzZVVybCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsInRoaXMiLCJfaXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZm9yRWFjaCIsIml0ZW0iLCJlbGVtZW50IiwiYWRkSXRlbSIsImlzSW52ZXJzZWQiLCJwcmVwZW5kIiwiYXBwZW5kIiwiQ2FyZCIsInRlbXBsYXRlU2VsZWN0b3IiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVEZWxldGVDYXJkIiwidXNlcklkIiwibmFtZSIsImxpbmsiLCJsaWtlcyIsIm93bmVyIiwiY3JlYXRlZEF0IiwiX2lkIiwiX25hbWUiLCJfbGluayIsIl9saWtlcyIsIl9vd25lciIsIl9jcmVhdGVkQXQiLCJfdXNlcklkIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJpbWFnZSIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwibGVuZ3RoIiwicmVtb3ZlIiwiX3NldEV2ZW50bGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9saWtlQ2FyZCIsIl9oYW5kbGVEZWxldGUiLCJldmVudCIsInRhcmdldCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJhZGQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZXZ0Iiwia2V5IiwiY2xvc2UiLCJjdXJyZW50VGFyZ2V0IiwiX3BvcHVwQ2xvc2VCdXR0b24iLCJQb3B1cFdpdGhJbWFnZSIsIl9maWd1cmVFbGVtZW50IiwiX2NhcHRpb25FbGVtZW50IiwiaW1hZ2VMaW5rIiwidGV4dCIsIlBvcHVwV2l0aEZvcm0iLCJoYW5kbGVTdWJtaXQiLCJfaGFuZGxlU3VibWl0IiwiX2Zvcm0iLCJfaW5wdXRWYWx1ZXMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXQiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJQb3B1cFdpdGhDb25maXJtYXRpb24iLCJfYnV0dG9uIiwiX3RhcmdldCIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtQ2xhc3NlcyIsImZvcm1FbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiX2Zvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9pbnB1dEVsZW1lbnRzIiwiQXJyYXkiLCJmcm9tIiwiX2J1dHRvbkVsZW1lbnQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJpbnB1dEVsZW1lbnQiLCJfaXNWYWxpZCIsIl90b2dnbGVCdXR0b25TdGF0ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsImlkIiwiX2hhc0ludmFsaWRJbnB1dCIsImRpc2FibGVCdXR0b25TdGF0ZSIsIl9lbmFibGVCdXR0b25TdGF0ZSIsImRpc2FibGVkIiwic29tZSIsIlVzZXJJbmZvIiwibmFtZUVsZW1lbnQiLCJqb2JFbGVtZW50IiwiYXZhdGFyRWxlbWVudCIsIl9uYW1lRWxlbWVudCIsIl9qb2JFbGVtZW50IiwiX2F2YXRhckVsZW1lbnQiLCJqb2IiLCJhYm91dCIsImF2YXRhciIsImNvaG9ydCIsIl9qb2IiLCJfYXZhdGFyIiwiX2NvaG9ydCIsImZvcm1WYWxpZGF0b3JzIiwiY2FyZHMiLCJyZW5kZXJDYXJkIiwiZGF0YSIsImNhcmQiLCJ1c2VySW5mbyIsImdlbmVyYXRlQ2FyZCIsImltYWdlUG9wdXAiLCJvcGVuIiwiY2FyZElkIiwicG9wdXBXaXRoQ29uZmlybWF0aW9uIiwic2V0VGFyZ2V0IiwiYXBpIiwiQXBpIiwiX2Jhc2VVcmwiLCJfaGVhZGVycyIsIl91c2VySW5mb1VybCIsIl9jYXJkc1VybCIsInVybCIsImZldGNoIiwibWV0aG9kIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIkVycm9yIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIlByb21pc2UiLCJyZXNvbHZlIiwiZ2V0VXNlckluZm8iLCJmaWxsIiwicmVuZGVyTmFtZSIsInJlbmRlckpvYiIsInJlbmRlckF2YXRhciIsImNhcmRzU2VjdGlvbiIsImdldEluaXRpYWxDYXJkcyIsInByb2ZpbGVFZGl0UG9wdXAiLCJzZXRVc2VySW5mbyIsIm5ld0NhcmRQb3B1cCIsImFkZE5ld0NhcmQiLCJnZXRBdHRyaWJ1dGUiLCJkZWxldGVDYXJkIiwiZGVsZXRlIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJkaXNwYXRjaEV2ZW50IiwiRXZlbnQiLCJmb3JtIiwiZW5hYmxlVmFsaWRhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=